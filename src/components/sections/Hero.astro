---
import { portfolioData } from '../../data/portfolio';
import TechIcon from '../ui/TechIcon.astro';

const topSkills = ["React", "React Native", "JavaScript", "TypeScript", "Node.js"];
---

<section class="py-20 px-4 bg-[#303446]">
  <div class="max-w-6xl mx-auto">
    <div class="flex flex-col lg:flex-row items-center gap-12">
      <!-- Imagen - 40% -->
      <div class="lg:w-2/5 flex justify-center">
        <div class="relative group">
          <div class="w-48 h-48 lg:w-64 lg:h-64 transition-all duration-500 ease-out group-hover:scale-110 group-hover:rotate-2 cursor-pointer">
            <!-- Avatar con imagen real -->
            <img
              src={portfolioData.personal.avatar}
              alt={portfolioData.personal.name}
              class="w-full h-full rounded-full object-cover transition-all duration-500 ease-out group-hover:brightness-110"
            />
          </div>
          <!-- Efecto de glow/resplandor -->
          <div class="absolute inset-0 rounded-full opacity-0 group-hover:opacity-30 transition-all duration-500 ease-out blur-xl scale-120 bg-gradient-radial from-[#babbf1] via-[#ca9ee6] to-transparent"></div>
          <!-- Anillo decorativo que aparece en hover -->
          <div class="absolute inset-0 rounded-full border-2 opacity-0 group-hover:opacity-60 transition-all duration-500 ease-out border-[#babbf1] scale-115 animate-pulse"></div>
        </div>
      </div>

      <!-- InformaciÃ³n - 60% -->
      <div class="lg:w-3/5 text-center lg:text-left">
        <h1 class="text-2xl md:text-3xl lg:text-4xl font-bold mb-2 bg-gradient-to-t from-[#ca9ee6] to-[#ef9f76] bg-clip-text text-transparent">
          {portfolioData.personal.name}
        </h1>
        <p class="text-lg mb-4 text-[#b5bfe2]">
          {portfolioData.personal.title}
        </p>

        <div class="flex justify-center lg:justify-start items-center gap-6 mb-6 text-sm text-[#a5adce]">
          <div class="flex items-center gap-2">
            <svg class="w-4 h-4 text-[#ea999c]" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
            </svg>
            <span>{portfolioData.personal.location}</span>
          </div>
          <div class="flex items-center gap-2">
            <svg class="w-4 h-4 text-[#ea999c]" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
            </svg>
            <span>{portfolioData.personal.email}</span>
          </div>
        </div>

        <div class="flex justify-center lg:justify-start flex-wrap gap-2 mb-6">
          {topSkills.map((tech) => (
            <span class="flex items-center gap-1.5 text-xs px-3 py-1 rounded-full border border-[#51576d] text-[#a5adce] bg-[#414559]/30">
              <TechIcon tech={portfolioData.techIcons[tech] || tech} />
              {tech}
            </span>
          ))}
        </div>

        <div class="flex justify-center lg:justify-start gap-3">
          {portfolioData.socialLinks.map((link) => (
            <a 
              href={link.url} 
              class="gap-2 text-sm px-4 py-2 rounded-md transition-all hover:opacity-80 flex items-center border border-[#414559] text-[#a5adce] bg-transparent hover:bg-[#414559] hover:text-[#c6d0f5]"
            >
              {link.name === "GitHub" && (
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4"></path>
                </svg>
              )}
              {link.name === "LinkedIn" && (
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 8a6 6 0 016 6v7h-4v-7a2 2 0 00-2-2 2 2 0 00-2 2v7h-4v-7a6 6 0 016-6zM2 9h4v12h-4V9zM4 6a2 2 0 100-4 2 2 0 000 4z"></path>
                </svg>
              )}
              {link.name === "Email" && (
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
                </svg>
              )}
              {link.name}
            </a>
          ))}
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  .scale-120 {
    transform: scale(1.2);
  }
  
  .scale-115 {
    transform: scale(1.15);
  }
  
  .bg-gradient-radial {
    background: radial-gradient(circle, var(--tw-gradient-stops));
  }
</style>
